## Subset and define wet period for each region ##
Region<- unique(AllWY_max$Subregion)
result <- list() # empty list to store iterated results from loop
for(i in 1:6){
# Work within only one region at a time
m<- AllWY_max %>% filter(Subregion == Region[i])
# Define dates of 'wet' events
wet_event <- subset(m, d14_precipavg >= 0.04)
# Also define 7 days past each 'wet' event as 'wet'
oneweek <- wet_event %>%
group_by(Date) %>%
complete(Date = seq.Date((Date), (Date+7), by = 'days'))
# Subset those dates from PRISM dataset, and define as "wet"
PRISM_wet <- subset(m, Date %in% oneweek$Date)
PRISM_wet$Seasonr <- "wet"
# Subset all other dates from PRISM to define as "dry"
PRISM_dry <- subset(m, !(Date %in% oneweek$Date))
PRISM_dry$Seasonr <- "dry"
# Store regional results in a list.
result[[i]]<-rbind(PRISM_wet, PRISM_dry)
} # End of loop
AllWY_max <- do.call(rbind, result) # recombine all 6 result df
# Preview results
AllWY_max %>%
group_by(Month, Seasonr) %>%
summarize(Sum = n()) %>%
pivot_wider(names_from = Seasonr,
names_repair = "check_unique",
values_from = Sum) # Values to fill columns
AllWY_max <- AllWY_max %>% mutate(Month = month(Date)) %>%
mutate(Month = as.factor(Month))
boxplot(max_precip ~ Month, data = AllWY_max)
AllWY_max %>%
group_by(Month, Seasonr, Subregion) %>%
summarize(Subregion = first(Subregion),
Sum = n()) %>%
pivot_wider(names_from = Seasonr,
names_repair = "check_unique",
values_from = Sum) # Values to fill columns
AllWY_max %>%
group_by(Month, Seasonr) %>%
summarize(Sum = n()) %>%
pivot_wider(names_from = Seasonr,
names_repair = "check_unique",
values_from = Sum) # Values to fill columns
AllWY_max %>%
group_by(Month, Season01) %>%
summarize(Sum = n()) %>%
pivot_wider(names_from = Season01,
names_repair = "check_unique",
values_from = Sum) # Values to fill columns
p <- ggplot(AllWY_max, aes(x=Month, y=d14_precipavg, fill= Subregion))
p + geom_boxplot()+
facet_wrap(~Subregion)
AllWY_max <- AllWY_max %>% rename(Season_04mm = Season01,
Season_14dAvg_04mm = Seasonr)
# Save results
write.csv(x = AllWY_max,
file = "Data/Output/USFE_Precip.csv",
row.names = F)
p <- ggplot(AllWY_max, aes(x=Month, y=d14_precipavg, fill= Subregion))
p + geom_boxplot()+
facet_wrap(~Subregion)
AllWY_max <- AllWY_max %>% mutate(Month = month(Date))
boxplot(max_precip ~ Month, data = AllWY_max)
boxplot(max_precip ~ Month, data = AllWY_max, ylim = c(0, 0.5))
AllWY_max %>%
group_by(Month, Season01, Subregion) %>%
summarize(Subregion = first(Subregion),
Sum = n()) %>%
pivot_wider(names_from = Season01,
names_repair = "check_unique",
values_from = Sum) # Values to fill columns
# Subset and define wet period for each region
Region<- unique(AllWY_max$Subregion)
result <- list()
for(i in 1:6){
m<- AllWY_max %>% filter(Subregion == Region[i])
wet_event <- subset(m, max_precip >= 0.04)
oneweek <- wet_event %>%
group_by(Date) %>%
complete(Date = seq.Date((Date), (Date+7), by = 'days'))
PRISM_wet <- subset(m, Date %in% oneweek$Date)
PRISM_wet$Season01 <- "wet"
PRISM_dry <- subset(m, !(Date %in% oneweek$Date))
PRISM_dry$Season01 <- "dry"
result[[i]]<-rbind(PRISM_wet, PRISM_dry)
}
AllWY_max <- do.call(rbind, result)
AllWY_max <- AllWY_max %>% mutate(Month = month(Date))
boxplot(max_precip ~ Month, data = AllWY_max)
boxplot(max_precip ~ Month, data = AllWY_max, ylim = c(0, 0.5))
AllWY_max %>%
group_by(Month, Season01, Subregion) %>%
summarize(Subregion = first(Subregion),
Sum = n()) %>%
pivot_wider(names_from = Season01,
names_repair = "check_unique",
values_from = Sum) # Values to fill columns
AllWY_max %>%
group_by(Month, Season01) %>%
summarize(Sum = n()) %>%
pivot_wider(names_from = Season01,
names_repair = "check_unique",
values_from = Sum) # Values to fill columns
boxplot(max_precip ~ Month, data = AllWY_max, ylim = c(0, 3))
AllWY_max %>%
group_by(Month, Season01, Subregion) %>%
summarize(Subregion = first(Subregion),
Sum = n()) %>%
pivot_wider(names_from = Season01,
names_repair = "check_unique",
values_from = Sum) # Values to fill columns
AllWY_max %>%
group_by(Month, Season01) %>%
summarize(Sum = n()) %>%
pivot_wider(names_from = Season01,
names_repair = "check_unique",
values_from = Sum) # Values to fill columns
AllWY_max %>%
group_by(Month, Season01, Subregion) %>%
summarize(Subregion = first(Subregion),
Sum = n()) %>%
pivot_wider(names_from = Season01,
names_repair = "check_unique",
values_from = Sum) # Values to fill columns
AllWY_max %>%
group_by(Month, Season01, Subregion) %>%
summarize(Subregion = first(Subregion),
Sum = n()) %>%
pivot_wider(names_from = Season01,
names_repair = "check_unique",
# Values to fill columns
values_from = Sum) %>%
mutate(Tot = wet + dry)
mutate_at(vars(wet), funs(P = ./(AllWY_max$Wet + WllWY_max$Dry * 100))
AllWY_max %>%
AllWY_max %>%
group_by(Month, Season01, Subregion) %>%
summarize(Subregion = first(Subregion),
Sum = n()) %>%
pivot_wider(names_from = Season01,
names_repair = "check_unique",
# Values to fill columns
values_from = Sum) %>%
mutate(Tot = wet + dry) %>%
mutate_at(vars(wet), funs(P = ./(AllWY_max$Wet + WllWY_max$Dry * 100)))
AllWY_max %>%
group_by(Month, Season01, Subregion) %>%
summarize(Subregion = first(Subregion),
Sum = n()) %>%
pivot_wider(names_from = Season01,
names_repair = "check_unique",
# Values to fill columns
values_from = Sum) %>%
mutate(Tot = wet + dry) %>%
mutate_at(vars(wet), funs(P = ./(Tot * 100)))
AllWY_max %>%
group_by(Month, Season01, Subregion) %>%
summarize(Subregion = first(Subregion),
Sum = n()) %>%
pivot_wider(names_from = Season01,
names_repair = "check_unique",
# Values to fill columns
values_from = Sum) %>%
mutate(Tot = wet + dry) %>%
mutate(Perc_Wet = wet/Tot) %>%
select(!wet, !dry, ! Tot)
select(!c(wet, dry, Tot)
AllWY_max %>%
AllWY_max %>%
group_by(Month, Season01, Subregion) %>%
summarize(Subregion = first(Subregion),
Sum = n()) %>%
pivot_wider(names_from = Season01,
names_repair = "check_unique",
# Values to fill columns
values_from = Sum) %>%
mutate(Tot = wet + dry) %>%
mutate(Perc_Wet = wet/Tot) %>%
select(!c(wet, dry, Tot))
AllWY_max %>%
group_by(Month, Season01, Subregion) %>%
summarize(Subregion = first(Subregion),
Sum = n()) %>%
pivot_wider(names_from = Season01,
names_repair = "check_unique",
# Values to fill columns
values_from = Sum) %>%
mutate(Tot = wet + dry) %>%
mutate(Perc_Wet = round(wet/Tot, 2)) %>%
select(!c(wet, dry, Tot))
AllWY_max %>%
group_by(Month, Season01, Subregion) %>%
summarize(Subregion = first(Subregion),
Sum = n()) %>%
pivot_wider(names_from = Season01,
names_repair = "check_unique",
# Values to fill columns
values_from = Sum) %>%
mutate(Tot = wet + dry) %>%
mutate(Perc_Wet = round(wet/Tot*100, 2)) %>%
select(!c(wet, dry, Tot))
AllWY_max %>%
group_by(Month, Season01) %>%
summarize(Sum = n()) %>%
pivot_wider(names_from = Season01,
names_repair = "check_unique",
values_from = Sum) # Values to fill columns
AllWY_max %>%
group_by(Month, Season01) %>%
summarize(Sum = n()) %>%
pivot_wider(names_from = Season01,
names_repair = "check_unique",
# Values to fill columns
values_from = Sum) %>%
mutate(Tot = wet + dry) %>%
mutate(Perc_Wet = round(wet/Tot*100, 2)) %>%
select(!c(wet, dry, Tot))
## Create column d14_precip avg holding a 14-day rolling average of max precipitation in the region.
library(RcppRoll)
Region<- unique(AllWY_max$Subregion)
result <- list()
for(i in 1:6){
m<- AllWY_max %>% filter(Subregion == Region[i])
m$d14_precipavg <- roll_mean(m$max_precip, n=14, align = "center", fill = NA)
result[[i]]<- m
}
AllWY_max <- do.call(rbind, result)
## Subset and define wet period for each region ##
Region<- unique(AllWY_max$Subregion)
result <- list() # empty list to store iterated results from loop
for(i in 1:6){
# Work within only one region at a time
m<- AllWY_max %>% filter(Subregion == Region[i])
# Define dates of 'wet' events
wet_event <- subset(m, d14_precipavg >= 0.04)
# Also define 7 days past each 'wet' event as 'wet'
oneweek <- wet_event %>%
group_by(Date) %>%
complete(Date = seq.Date((Date), (Date+7), by = 'days'))
# Subset those dates from PRISM dataset, and define as "wet"
PRISM_wet <- subset(m, Date %in% oneweek$Date)
PRISM_wet$Seasonr <- "wet"
# Subset all other dates from PRISM to define as "dry"
PRISM_dry <- subset(m, !(Date %in% oneweek$Date))
PRISM_dry$Seasonr <- "dry"
# Store regional results in a list.
result[[i]]<-rbind(PRISM_wet, PRISM_dry)
} # End of loop
AllWY_max <- do.call(rbind, result) # recombine all 6 result df
# Preview results
AllWY_max %>%
group_by(Month, Seasonr) %>%
summarize(Sum = n()) %>%
pivot_wider(names_from = Seasonr,
names_repair = "check_unique",
values_from = Sum) # Values to fill columns
# Preview results
AllWY_max %>%
group_by(Month, Seasonr, Subregion) %>%
summarize(Subregion = first(Subregion),
Sum = n()) %>%
pivot_wider(names_from = Seasonr,
names_repair = "check_unique",
# Values to fill columns
values_from = Sum) %>%
mutate(Tot = wet + dry) %>%
mutate(Perc_Wet = round(wet/Tot*100, 2)) %>%
select(!c(wet, dry, Tot))
AllWY_max %>%
group_by(Month, Seasonr) %>%
summarize(Sum = n()) %>%
pivot_wider(names_from = Seasonr,
names_repair = "check_unique",
# Values to fill columns
values_from = Sum) %>%
mutate(Tot = wet + dry) %>%
mutate(Perc_Wet = round(wet/Tot*100, 2)) %>%
select(!c(wet, dry, Tot))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(data.table)
library(xts)
library(sf)
library(here)
library(readxl)
library(RColorBrewer)
library(zoo)
library(lubridate)
library(ggplot2)
## Load precip data
df2010 <- fread("https://github.com/WWU-IETC-R-Collab/Seasonal/raw/master/Data/PRISM_Edited/PRISM_WY2010.csv") %>%
mutate(WaterYear = "2010")
df2011 <- fread("https://github.com/WWU-IETC-R-Collab/Seasonal/raw/master/Data/PRISM_Edited/PRISM_WY2011.csv") %>%
mutate(WaterYear = "2011")
df2012 <- fread("https://github.com/WWU-IETC-R-Collab/Seasonal/raw/master/Data/PRISM_Edited/PRISM_WY2012.csv")%>%
mutate(WaterYear = "2012")
df2013 <- fread("https://github.com/WWU-IETC-R-Collab/Seasonal/raw/master/Data/PRISM_Edited/PRISM_WY2013.csv")%>%
mutate(WaterYear = "2013")
df2014 <- fread("https://github.com/WWU-IETC-R-Collab/Seasonal/raw/master/Data/PRISM_Edited/PRISM_WY2014.csv")%>%
mutate(WaterYear = "2014")
df2015 <- fread("https://github.com/WWU-IETC-R-Collab/Seasonal/raw/master/Data/PRISM_Edited/PRISM_WY2015.csv")%>%
mutate(WaterYear = "2015")
df2016 <- fread("https://github.com/WWU-IETC-R-Collab/Seasonal/raw/master/Data/PRISM_Edited/PRISM_WY2016.csv")%>%
mutate(WaterYear = "2016")
df2017 <- fread("https://github.com/WWU-IETC-R-Collab/Seasonal/raw/master/Data/PRISM_Edited/PRISM_WY2017.csv")%>%
mutate(WaterYear = "2017")
df2018 <- fread("https://github.com/WWU-IETC-R-Collab/Seasonal/raw/master/Data/PRISM_Edited/PRISM_WY2018.csv")%>%
mutate(WaterYear = "2018")
df2019 <- fread("https://github.com/WWU-IETC-R-Collab/Seasonal/raw/master/Data/PRISM_Edited/PRISM_WY2019.csv")%>%
mutate(WaterYear = "2019")
# Load Risk Regions from GitHub CEDEN repository (change if moved)
USFE.RiskRegions.z <- "https://github.com/WWU-IETC-R-Collab/CEDEN-mod/raw/main/Data/USFE_RiskRegions_9292020.zip"
unzip_shape <- function(InputShapeZip){
dl.temp <- tempfile() # Create local temp file for zipped shapefile
dl.temp2 <- tempfile() # Create a second local temp file to store unzipped shapefile
download.file(InputShapeZip, dl.temp, quiet=T) # Downloads zip file from InputShape
unzip(zip = dl.temp, exdir = dl.temp2) # Unzips zip file
shapefile.out <-list.files(dl.temp2, pattern = ".shp$",full.names=TRUE) # stores file path of files with .shp ext in dl.temp2
sf::st_read(shapefile.out) # Reads shapefile as sf object
}
USFE.RiskRegions <- unzip_shape(USFE.RiskRegions.z) # CRS is WGS 84
## Combine data
AllWY <- rbind(df2010, df2011, df2012, df2013,
df2014, df2015, df2016, df2017,
df2018, df2019)
rm(df2010, df2011, df2012, df2013,
df2014, df2015, df2016,df2017,
df2018, df2019) # clean up global environment
## Correct Date Format
AllWY<- AllWY %>%
mutate(Date = as.Date(AllWY$Date, "%m/%d/%Y")) %>%
filter(!is.na(Date))
## Create zoo
AllWY.zoo <-zoo(AllWY, as.Date(AllWY$Date))
## Create sf
AllWY.sf <- st_as_sf(AllWY, coords = c("Longitude", "Latitude"), remove = F, crs = "WGS84")
## Join to Risk Regions
AllWY.sf <- st_join(AllWY.sf, USFE.RiskRegions[1], left = T) %>%
filter(!is.na(Subregion))
AllWY <- AllWY.sf %>% st_set_geometry(NULL)
## Summarize precip by dates within each RR.
AllWY_max <- AllWY %>%
group_by(Date, Subregion, WaterYear) %>%
summarize(max_precip = max(ppt_in))
# Clean up workspace
rm(list=setdiff(ls(), c("AllWY_max")))
# Subset and define wet period for each region
Region<- unique(AllWY_max$Subregion)
result <- list()
for(i in 1:6){
m<- AllWY_max %>% filter(Subregion == Region[i])
wet_event <- subset(m, max_precip >= 0.05)
oneweek <- wet_event %>%
group_by(Date) %>%
complete(Date = seq.Date((Date), (Date+7), by = 'days'))
PRISM_wet <- subset(m, Date %in% oneweek$Date)
PRISM_wet$Season01 <- "wet"
PRISM_dry <- subset(m, !(Date %in% oneweek$Date))
PRISM_dry$Season01 <- "dry"
result[[i]]<-rbind(PRISM_wet, PRISM_dry)
}
AllWY_max <- do.call(rbind, result)
AllWY_max <- AllWY_max %>% mutate(Month = month(Date))
boxplot(max_precip ~ Month, data = AllWY_max, ylim = c(0, 3))
AllWY_max %>%
group_by(Month, Season01, Subregion) %>%
summarize(Subregion = first(Subregion),
Sum = n()) %>%
pivot_wider(names_from = Season01,
names_repair = "check_unique",
# Values to fill columns
values_from = Sum) %>%
mutate(Tot = wet + dry) %>%
mutate(Perc_Wet = round(wet/Tot*100, 2)) %>%
select(!c(wet, dry, Tot))
AllWY_max %>%
group_by(Month, Season01) %>%
summarize(Sum = n()) %>%
pivot_wider(names_from = Season01,
names_repair = "check_unique",
# Values to fill columns
values_from = Sum) %>%
mutate(Tot = wet + dry) %>%
mutate(Perc_Wet = round(wet/Tot*100, 2)) %>%
select(!c(wet, dry, Tot))
## Create column d14_precip avg holding a 14-day rolling average of max precipitation in the region.
library(RcppRoll)
Region<- unique(AllWY_max$Subregion)
result <- list()
for(i in 1:6){
m<- AllWY_max %>% filter(Subregion == Region[i])
m$d14_precipavg <- roll_mean(m$max_precip, n=14, align = "center", fill = NA)
result[[i]]<- m
}
AllWY_max <- do.call(rbind, result)
## Subset and define wet period for each region ##
Region<- unique(AllWY_max$Subregion)
result <- list() # empty list to store iterated results from loop
for(i in 1:6){
# Work within only one region at a time
m<- AllWY_max %>% filter(Subregion == Region[i])
# Define dates of 'wet' events
wet_event <- subset(m, d14_precipavg >= 0.05)
# Also define 7 days past each 'wet' event as 'wet'
oneweek <- wet_event %>%
group_by(Date) %>%
complete(Date = seq.Date((Date), (Date+7), by = 'days'))
# Subset those dates from PRISM dataset, and define as "wet"
PRISM_wet <- subset(m, Date %in% oneweek$Date)
PRISM_wet$Seasonr <- "wet"
# Subset all other dates from PRISM to define as "dry"
PRISM_dry <- subset(m, !(Date %in% oneweek$Date))
PRISM_dry$Seasonr <- "dry"
# Store regional results in a list.
result[[i]]<-rbind(PRISM_wet, PRISM_dry)
} # End of loop
AllWY_max <- do.call(rbind, result) # recombine all 6 result df
# Preview results
AllWY_max %>%
group_by(Month, Seasonr, Subregion) %>%
summarize(Subregion = first(Subregion),
Sum = n()) %>%
pivot_wider(names_from = Seasonr,
names_repair = "check_unique",
# Values to fill columns
values_from = Sum) %>%
mutate(Tot = wet + dry) %>%
mutate(Perc_Wet = round(wet/Tot*100, 2)) %>%
select(!c(wet, dry, Tot))
AllWY_max %>%
group_by(Month, Seasonr) %>%
summarize(Sum = n()) %>%
pivot_wider(names_from = Seasonr,
names_repair = "check_unique",
# Values to fill columns
values_from = Sum) %>%
mutate(Tot = wet + dry) %>%
mutate(Perc_Wet = round(wet/Tot*100, 2)) %>%
select(!c(wet, dry, Tot))
AllWY_max <- AllWY_max %>% mutate(Month = month(Date)) %>%
mutate(Month = as.factor(Month))
boxplot(max_precip ~ Month, data = AllWY_max)
AllWY_max %>%
group_by(Month, Seasonr, Subregion) %>%
summarize(Subregion = first(Subregion),
Sum = n()) %>%
pivot_wider(names_from = Seasonr,
names_repair = "check_unique",
values_from = Sum) # Values to fill columns
AllWY_max %>%
group_by(Month, Seasonr) %>%
summarize(Sum = n()) %>%
pivot_wider(names_from = Seasonr,
names_repair = "check_unique",
values_from = Sum) # Values to fill columns
AllWY_max %>%
group_by(Month, Season01) %>%
summarize(Sum = n()) %>%
pivot_wider(names_from = Season01,
names_repair = "check_unique",
values_from = Sum) # Values to fill columns
p <- ggplot(AllWY_max, aes(x=Month, y=d14_precipavg, fill= Subregion))
p + geom_boxplot()+
facet_wrap(~Subregion)
AllWY_max <- AllWY_max %>% rename(Season_04mm = Season01,
Season_14dAvg_04mm = Seasonr)
# Save results
write.csv(x = AllWY_max,
file = "Data/Output/USFE_Precip.csv",
row.names = F)
## By Month and Subregion
AllWY_max %>%
group_by(Month, Seasonr, Subregion) %>%
summarize(Subregion = first(Subregion),
Sum = n()) %>%
pivot_wider(names_from = Seasonr,
names_repair = "check_unique",
# Values to fill columns
values_from = Sum) %>%
mutate(Tot = wet + dry) %>%
mutate(Perc_Wet = round(wet/Tot*100, 2)) %>%
select(!c(wet, dry, Tot))
knitr::opts_chunk$set(echo = TRUE)
# CRS is WGS 84. Transform to NAD 83
USFE.RiskRegions <- unzip_shape(USFE.RiskRegions.z) %>%
st_transform(., "NAD83")
rm(list = ls())
library(tidyverse)
library(data.table)
library(sf)
library(here)
library(ggplot2)
# Risk Regions from GitHub CEDEN repository (change if moved)
USFE.RiskRegions.z <- "https://github.com/WWU-IETC-R-Collab/CEDEN-mod/raw/main/Data/USFE_RiskRegions_9292020.zip"
unzip_shape <- function(InputShapeZip){
dl.temp <- tempfile() # Create local temp file for zipped shapefile
dl.temp2 <- tempfile() # Create a second local temp file to store unzipped shapefile
download.file(InputShapeZip, dl.temp, quiet=T) # Downloads zip file from InputShape
unzip(zip = dl.temp, exdir = dl.temp2) # Unzips zip file
shapefile.out <-list.files(dl.temp2, pattern = ".shp$",full.names=TRUE) # stores file path of files with .shp ext in dl.temp2
sf::st_read(shapefile.out) # Reads shapefile as sf object
}
# CRS is WGS 84. Transform to NAD 83
USFE.RiskRegions <- unzip_shape(USFE.RiskRegions.z) %>%
st_transform(., "NAD83")
# Precipitation Data from PRISM from Seasons repo
AllWY_max <-  fread("https://github.com/WWU-IETC-R-Collab/Seasonal/raw/master/Data/Output/USFE_Precip.csv")
# Load Land Use Data from GitHub LULC repo
LULC <- fread("https://github.com/WWU-IETC-R-Collab/LULC/raw/EW_Learning/Output/NLCD_LULC.csv") %>%
select(Subregion, PercHighIntens, PercAgri)
